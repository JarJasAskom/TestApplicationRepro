@page "/"
@rendermode InteractiveServer

@inject ICsireCommunicationQuery mCsireCommunicationQuery

<div>
    <FluentButton Appearance="Appearance.Accent" OnClick="Refresh">
        Refresh
    </FluentButton>

</div>

<ErrorBoundary>
    <ChildContent>
        <FluentDataGrid TGridItem="CsireRequest" Items="@mCsireRequests" ShowHover="true" ResizableColumns="true" @ref="mFluentDataGrid">

            <SelectColumn TGridItem="CsireRequest"
                          SelectMode="DataGridSelectMode.Single"
                          SelectFromEntireRow="true"
                          Property="@(e => e.Id == mSelectedCsireRequest?.Id)"
                          OnSelect="@(e => Select(e.Item, e.Selected))" />

            <PropertyColumn Property="@(p => p.Id)" Width="0.5fr" />
            <PropertyColumn Property="@(p => p.ProcessNumber)" Width="0.5fr" />
            <PropertyColumn Property="@(p => p.Description)" Tooltip="true" Width="2fr" />
            <PropertyColumn Property="@(p => p.CreatedOnUtc)" Sortable="true" />
            <PropertyColumn Property="@(p => p.CreatedBy)" />
            <PropertyColumn Property="@(p => p.Status)" />

            <PropertyColumn Property="@(p => p.MessageId)" Tooltip="true" />
            <PropertyColumn Property="@(p => p.Message)" Tooltip="true" />
            <PropertyColumn Property="@(p => p.SentOnUtc)" />

            <PropertyColumn Property="@(p => p.ResultSuccess)" />
            <PropertyColumn Property="@(p => p.ResultCode)" />
            <PropertyColumn Property="@(p => p.ResultDescription)" />
            <PropertyColumn Property="@(p => p.AnsweredOnUtc)" />

        </FluentDataGrid>
    </ChildContent>
    <ErrorContent Context="Exception">
        <p class="errorUI">
            @Exception.Message
        </p>
    </ErrorContent>
</ErrorBoundary>


@code {
    FluentDataGrid<CsireRequest>? mFluentDataGrid;
    IQueryable<CsireRequest> mCsireRequests = new List<CsireRequest>().AsQueryable();
    CsireRequest? mSelectedCsireRequest;


    protected override void OnInitialized()
    {
        mCsireRequests = mCsireCommunicationQuery.GetRequests();
    }


    void Select(CsireRequest aCsireRequest, bool aSelected)
    {
        //Console.WriteLine($"Select  {aCsireRequest.Id}, Selected: {aSelected}");

        if (aSelected)
            mSelectedCsireRequest = aCsireRequest;
    }


    async Task Refresh()
    {
        if (mFluentDataGrid == null)
            return;

        await mFluentDataGrid.RefreshDataAsync();
    }
}
